import React, { useEffect, useState } from "react";
import ClickAwayListener from "react-click-away-listener";
import { NavLink } from "react-router-dom";
import { Menu, X } from "react-feather";

export default function Header() {
  const [isOpen, setIsOpen] = useState(false);
  function changeNavState() {
    if (window.innerWidth < 1000) {
      setIsOpen(false);
    } else {
      setIsOpen(true);
    }
  }
  useEffect(() => {
    changeNavState();
    window.addEventListener("resize", changeNavState);
    window.addEventListener("scroll", () => {
      changeNavState();
    });
  }, []);

  return (
    <div
      className="header"
      style={
        isOpen && window.innerWidth < 1000
          ? { backgroundColor: "#fffff" }
          : null
      }
    >
      <div className="header__content">
        <NavLink to="/" className="header__content__logo">
          <svg
            width="174"
            height="43"
            viewBox="0 0 174 43"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M56.1041 19.7924H61.6222L59.5512 13.079C59.5049 12.9585 59.4168 12.6249 59.2871 12.0782C59.1296 11.4388 58.9859 10.8597 58.8562 10.3407C58.7265 10.8133 58.6153 11.2905 58.5226 11.7724C58.3744 12.2357 58.2493 12.6712 58.1473 13.079L56.1041 19.7924ZM48.3342 27.3955L55.3535 7.04654H62.3033L69.3365 27.3955H63.8184L62.7898 23.7538H54.9087L53.8524 27.3955H48.3342ZM71.4353 27.3955V7.04654H77.0369V27.3955H71.4353ZM91.2005 19.9036V15.6365H102.098C102.098 15.8311 102.107 15.984 102.126 16.0952V16.8318C102.126 20.3438 101.208 23.0588 99.3735 24.977C97.5202 26.9137 94.9117 27.882 91.548 27.882C89.9449 27.882 88.4808 27.6364 87.1557 27.1453C85.877 26.6542 84.7279 25.8944 83.7086 24.8658C82.7357 23.8743 81.9897 22.7253 81.4708 21.4187C81.1928 20.7237 80.989 20.0287 80.8592 19.3338C80.7295 18.6295 80.6646 17.9299 80.6646 17.2349C80.6646 15.7338 80.9241 14.3392 81.443 13.0512C81.9619 11.8002 82.7357 10.6512 83.7642 9.60406C84.7465 8.62183 85.914 7.87125 87.2669 7.35233C88.6013 6.84268 90.0283 6.58786 91.548 6.58786C93.531 6.58786 95.2916 6.98631 96.8298 7.78322C97.321 8.02415 97.8028 8.3253 98.2754 8.68669C98.7572 9.03881 99.1974 9.43264 99.5958 9.86816C100.004 10.3037 100.374 10.7763 100.708 11.2859L95.8986 13.5932C95.324 12.8056 94.68 12.2172 93.9665 11.828C93.2345 11.4481 92.4283 11.2581 91.548 11.2581C89.88 11.2581 88.5781 11.8095 87.6422 12.9122C86.697 14.0056 86.2245 15.5206 86.2245 17.4573C86.2245 19.4033 86.697 20.9322 87.6422 22.0442C88.5781 23.1469 89.88 23.6982 91.548 23.6982C92.9658 23.6982 94.1379 23.3461 95.0646 22.6419C96.0283 21.9469 96.5796 21.0341 96.7186 19.9036H91.2005ZM105.517 27.3955V7.04654H111.313C112.434 7.04654 113.38 7.06971 114.149 7.11604C114.927 7.16237 115.566 7.24114 116.067 7.35233C116.929 7.55619 117.698 7.90832 118.374 8.4087C119.115 8.96468 119.676 9.67819 120.056 10.5492C120.454 11.3832 120.654 12.3284 120.654 13.3847C120.654 14.9508 120.264 16.2342 119.486 17.2349C118.726 18.2357 117.6 18.889 116.109 19.1948L121.654 27.3955H115.386L110.715 19.4311V27.3955H105.517ZM110.715 16.665H111.744C112.958 16.665 113.834 16.4658 114.371 16.0674C114.918 15.6226 115.191 14.9786 115.191 14.1353C115.191 13.116 114.936 12.3932 114.427 11.967C113.908 11.5315 113.041 11.3137 111.827 11.3137H110.715V16.665ZM150.552 27.3955V7.04654H155.903L163.589 17.5129C163.784 17.8002 164.03 18.2311 164.326 18.8056C164.706 19.5469 165.077 20.3114 165.438 21.099C165.299 20.0334 165.22 19.2874 165.202 18.8612C165.146 18.194 165.118 17.6056 165.118 17.0959V7.04654H170.442V27.3955H165.118L157.432 16.8874C157.321 16.7392 157.075 16.3037 156.695 15.5809C156.362 14.9878 155.991 14.2373 155.583 13.3291C155.676 14.0519 155.764 14.8025 155.847 15.5809C155.884 16.4519 155.903 17.0403 155.903 17.3461V27.3955H150.552Z"
              fill="#1D1D1D"
            />
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M135.629 20.2324C137.698 20.2324 139.376 18.5549 139.376 16.4857C139.376 14.4165 137.698 12.739 135.629 12.739C133.56 12.739 131.883 14.4165 131.883 16.4857C131.883 18.5549 133.56 20.2324 135.629 20.2324ZM135.629 27.2761C141.589 27.2761 146.42 22.4451 146.42 16.4857C146.42 10.5263 141.589 5.69531 135.629 5.69531C129.67 5.69531 124.839 10.5263 124.839 16.4857C124.839 22.4451 129.67 27.2761 135.629 27.2761Z"
              fill="url(#paint0_linear_5_87)"
            />
            <path
              d="M0.00635412 22.4573C0.00635412 19.6998 0.0292572 16.9423 0.00635412 14.1848C0.00635412 13.264 0.166676 12.9553 1.15151 13.3686C5.63203 15.2494 10.1279 17.092 14.6389 18.8963C15.4023 19.2049 15.7484 19.5697 15.7357 20.4574C15.6771 23.9343 15.6899 27.4137 15.7357 30.893C15.7357 31.768 15.4812 32.0792 14.5804 32.0715C10.1372 32.0358 5.69311 32.0358 1.24821 32.0715C0.324454 32.0715 -0.0241572 31.8165 0.00129064 30.8548C0.0420072 28.0565 0.00635412 25.2556 0.00635412 22.4573Z"
              fill="#2F8BBF"
            />
            <path
              d="M35.7899 33.3605C35.7899 36.172 35.7719 38.9836 35.7899 41.7799C35.7899 42.6617 35.5873 42.9198 34.6821 42.5467C30.0804 40.6365 25.465 38.757 20.8359 36.9082C20.259 36.6756 20.0795 36.3356 20.0821 35.7554C20.0949 32.1412 20.1051 28.5245 20.0821 24.9104C20.0821 24.0516 20.4308 23.8241 21.2256 23.8292C25.6641 23.8522 30.1 23.8675 34.536 23.8292C35.6026 23.8292 35.818 24.2714 35.818 25.2043C35.7642 27.9264 35.7899 30.6486 35.7899 33.3605Z"
              fill="#4C51C3"
            />
            <path
              d="M28.0012 9.64349C28.0012 12.3641 27.9755 15.0873 28.0139 17.8181C28.0139 18.7659 27.909 19.1465 26.8239 18.6918C22.3145 16.7988 17.7794 14.9672 13.2393 13.1484C12.5509 12.8699 12.2822 12.5123 12.2898 11.751C12.3308 8.26403 12.3487 4.77704 12.2898 1.27728C12.2694 0.227356 12.6532 0 13.6181 0C18.0081 0.037467 22.3964 0.037467 26.7829 0C27.7273 0 28.0446 0.255451 28.0241 1.22363C27.9627 4.02344 27.9986 6.83347 28.0012 9.64349Z"
              fill="#12C8BB"
            />
            <defs>
              <linearGradient
                id="paint0_linear_5_87"
                x1="135.629"
                y1="5.69531"
                x2="135.629"
                y2="27.2761"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#0AD8BA" />
                <stop offset="1" stop-color="#553EC5" />
              </linearGradient>
            </defs>
          </svg>
        </NavLink>

        {isOpen ? (
          <ClickAwayListener
            onClickAway={() => {
              if (window.innerWidth < 1000) {
                setIsOpen(false);
              }
            }}
          >
            <div className="header__content__nav">
              <NavLink
                to="/#"
                activeclassname="active"
                className="header__content__nav__link"
                onClick={() => {
                  if (window.innerWidth < 1000) {
                    setIsOpen(false);
                  }
                }}
              >
                Services
              </NavLink>
              <NavLink
                to="/#"
                activeclassname="active"
                className="header__content__nav__link"
                onClick={() => {
                  if (window.innerWidth < 1000) {
                    setIsOpen(false);
                  }
                }}
              >
                Expertise
              </NavLink>
              <NavLink
                to="/#"
                activeclassname="active"
                className="header__content__nav__link"
                onClick={() => {
                  if (window.innerWidth < 1000) {
                    setIsOpen(false);
                  }
                }}
              >
                Company
              </NavLink>
            </div>
          </ClickAwayListener>
        ) : null}

        <div className="header__content__cta">
          <button
            className="header__content__menu"
            onClick={() => {
              setIsOpen(!isOpen);
            }}
            title={isOpen ? "Close" : "Open"}
          >
            {isOpen ? (
              <X size={20} color="currentColor" />
            ) : (
              <Menu size={20} color="currentColor" />
            )}
          </button>
          <NavLink
            to="/Login"
            title="Join Now"
            className="header__content__cta__button"
          >
            Get in Touch
          </NavLink>
        </div>
      </div>
    </div>
  );
}
